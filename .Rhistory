n_Corpus <- data.frame(word = names(n_Corpus), freq=n_Corpus, row.names = NULL)
n_Corpus <- n_Corpus %>% filter(word!='nutritional')
# #wordcloud
# # set.seed(1000)
# wordcloud2(n_Corpus, color = 'random-light', size = 2, minRotation = -pi/6, maxRotation = -pi/6)
set.seed(123)
# Create purple_orange
purple_orange <- brewer.pal(10, "PuOr")
# Drop 2 faintest colors
purple_orange <- purple_orange[-(1:2)]
wordcloud(n_Corpus$word,n_Corpus$freq ,colors =purple_orange, max.words = 100)
wordcloud(n_Corpus$word,n_Corpus$freq , max.words = 100)
wordcloud(n_Corpus$word,n_Corpus$freq , color=c("chartreuse", "cornflowerblue", "darkorange") ,max.words = 100)
# word cloud with "nutritional" tag in twitter
n <- "data/nutritional"
files <- list.files(n, pattern="csv", full.names=TRUE) %>%
set_names()
wc_n <- files %>% map_dfr(read_csv, .id="filename")
n_text <- str_c(wc_n$data.text, collapse = "")
#clean the text
n_text <-
n_text %>%
str_remove("\\n") %>%                   # remove linebreaks
rm_twitter_url() %>%                    # Remove URLS
rm_url() %>%
str_remove_all("#\\S+") %>%             # Remove any hashtags
str_remove_all("@\\S+") %>%             # Remove any @ mentions
removeWords(stopwords("english")) %>%   # Remove common words (a, the, it etc.)
removeNumbers() %>%
stripWhitespace() %>%
removeWords(c("amp")) %>%
removeWords(stopwords("SMART")) %>%
removePunctuation()
removeNumPunct <- function(x){gsub("[^[:alpha:][:space:]]*", "", x)}
# Convert the data into a summary table
n_Corpus <-
Corpus(VectorSource(n_text)) %>%
tm_map(content_transformer(removeNumPunct)) %>%
TermDocumentMatrix() %>%
as.matrix()
n_Corpus <- sort(rowSums(n_Corpus), decreasing=TRUE)
n_Corpus <- data.frame(word = names(n_Corpus), freq=n_Corpus, row.names = NULL)
n_Corpus <- n_Corpus %>% filter(word!='nutritional')
# #wordcloud
# # set.seed(1000)
# wordcloud2(n_Corpus, color = 'random-light', size = 2, minRotation = -pi/6, maxRotation = -pi/6)
set.seed(123)
# Create purple_orange
purple_orange <- brewer.pal(10, "PuOr")
# Drop 2 faintest colors
purple_orange <- purple_orange[-(1:2)]
wordcloud(n_Corpus$word,n_Corpus$freq , color=purple_orange, max.words = 100)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
# theme(legend.position='none')+
theme_pander()+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
# theme(legend.position='none')+
theme_pander()+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
# theme(legend.position='none')+
theme_pander()+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
# theme(legend.position='none')+
theme_pander()+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
theme(legend.position='none')+
theme_pander()+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
theme(legend.position='none')+
# theme_pander()+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
theme_classic(legend.position='none')+
# theme_pander()+
coord_flip()
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
theme_classic(legend.position='none')+
# theme_pander()+
coord_flip()
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
theme(legend.position='none',panel.background = element_blank())+
# theme_pander()+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
theme(legend.position='none',panel.background = element_rect(fill = 'white', colour = 'white'))+
# theme_pander()+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
theme(legend.position='none',panel.background = element_rect(fill = 'white'))+
# theme_pander()+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
theme_pander()+
theme(legend.position='none')+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
theme_classic()+
theme(legend.position='none')+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
# theme_classic()+
theme_light()+
theme(legend.position='none')+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d)",x='')+
# theme_classic()+
theme_pander()+
theme(legend.position='none')+
coord_flip()
ggplotly(top_food_box)
top_food_sex <- food_life %>%
filter(year==2018,age==999,female!=999,urban==999,edu==999) %>%
mutate(sex=if_else(female==1,'female','male'))%>%
group_by(Food,sex)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
ggplot(top_food_sex,aes(x=reorder(Food,intake_avg), y=intake_avg,fill=sex)) +
geom_bar(stat="identity",position="dodge", width = 0.5, alpha = 0.7) +
labs(title="Differences in Food Intake for Females & Males",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake",x='')+
theme_pander()+
coord_flip()
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide",
subtitle = "Source:Global Dietary Database (2018)",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d/p)",x='')+
# theme_classic()+
theme_pander()+
theme(legend.position='none')+
coord_flip()
ggplotly(top_food_box)
top_food_box <- food_life %>%
filter(year==2018,age==999,female==999,urban==999,edu==999) %>%
ggplot(.,aes(x=reorder(Food,intake), y=intake))+
geom_boxplot( aes(color=Food,fill=Food),alpha = 0.7)+
labs(title="Food Intake Worldwide (2018)",
subtitle = "Source:Global Dietary Database (2018)",
caption= "Source:Global Dietary Database",
y="Average Food Daily Intake(g/d/ppl)",x='')+
# theme_classic()+
theme_pander()+
theme(legend.position='none')+
coord_flip()
ggplotly(top_food_box)
top_food_sex <- food_life %>%
filter(year==2018,age==999,female!=999,urban==999,edu==999) %>%
mutate(sex=if_else(female==1,'female','male'))%>%
group_by(Food,sex)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
ggplot(top_food_sex,aes(x=reorder(Food,intake_avg), y=intake_avg,fill=sex)) +
geom_bar(stat="identity",position="dodge", width = 0.5, alpha = 0.7) +
labs(title="Differences in Food Intake for Females & Males",
caption= "Source:Global Dietary Database (2018)",
y="Average Food Daily Intake(g/d/ppl)",x='')+
theme_pander()+
coord_flip()
# Average Food Intake Worldwide by Year
top_year <- food_life %>%
filter(age==999,female==999,urban==999,edu==999) %>%
group_by(year,Food)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
plot1 <- top_year%>%
ggplot(., aes(x = year, y=intake_avg,group=Food,color=Food),alpha=0.7) +
geom_line( size=1)+
geom_point(size=1)+
labs(x='Year', y='Intake Avg(g/day)', title='Average Food Intake Worldwide')+
theme_pander()
ggplotly(plot1)
# Average Food Intake Worldwide by Year
top_year <- food_life %>%
filter(age==999,female==999,urban==999,edu==999) %>%
group_by(year,Food)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
plot1 <- top_year%>%
ggplot(., aes(x = year, y=intake_avg,group=Food,color=Food),alpha=0.7) +
geom_line( size=1)+
geom_point(size=1)+
labs(x='Year', y='Intake Avg(g/d)', title='Average Food Intake Worldwide')+
theme_pander()
ggplotly(plot1)
# Average Food Intake Worldwide by Year
top_year <- food_life %>%
filter(age==999,female==999,urban==999,edu==999) %>%
group_by(year,Food)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
plot1 <- top_year%>%
ggplot(., aes(x = year, y=intake_avg,group=Food,color=Food),alpha=0.7,color=brewer.pal(13, "Spectral")) +
geom_line( size=1)+
geom_point(size=1)+
labs(x='Year', y='Intake Avg(g/d)', title='Average Food Intake Worldwide')+
theme_pander()
ggplotly(plot1)
# Average Food Intake Worldwide by Year
top_year <- food_life %>%
filter(age==999,female==999,urban==999,edu==999) %>%
group_by(year,Food)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
plot1 <- top_year%>%
ggplot(., aes(x = year, y=intake_avg,group=Food),alpha=0.7,color=brewer.pal(13, "Spectral")) +
geom_line( size=1)+
geom_point(size=1)+
labs(x='Year', y='Intake Avg(g/d)', title='Average Food Intake Worldwide')+
theme_pander()
ggplotly(plot1)
# Average Food Intake Worldwide by Year
top_year <- food_life %>%
filter(age==999,female==999,urban==999,edu==999) %>%
group_by(year,Food)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
plot1 <- top_year%>%
ggplot(., aes(x = year, y=intake_avg,group=Food,color=Food),alpha=0.7) +
geom_line( size=1)+
geom_point(size=1)+
scale_color_manual(values=c(brewer.pal(12,"Set3"),"#999999"))+
labs(x='Year', y='Intake Avg(g/d)', title='Average Food Intake Worldwide')+
theme_pander()
ggplotly(plot1)
palette()
scale_fill_hue()
gg_color_hue(13)
display.brewer.all()
# Average Food Intake Worldwide by Year
top_year <- food_life %>%
filter(age==999,female==999,urban==999,edu==999) %>%
group_by(year,Food)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
plot1 <- top_year%>%
ggplot(., aes(x = year, y=intake_avg,group=Food,color=Food),alpha=0.7) +
geom_line( size=1)+
geom_point(size=1)+
scale_color_manual(values=c(brewer.pal(12,"Set1"),"#999999"))+
labs(x='Year', y='Intake Avg(g/d)', title='Average Food Intake Worldwide')+
theme_pander()
ggplotly(plot1)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
n = 13
cols = gg_color_hue(n)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
n = 13
cols = gg_color_hue(n)
cols
# Average Food Intake Worldwide by Year
top_year <- food_life %>%
filter(age==999,female==999,urban==999,edu==999) %>%
group_by(year,Food)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
plot1 <- top_year%>%
ggplot(., aes(x = year, y=intake_avg,group=Food,color=Food),alpha=0.7) +
geom_line( size=1)+
geom_point(size=1)+
# scale_color_manual(values=c(brewer.pal(12,"Set1"),"#999999"))+
scale_color_manual(values=cols)+
labs(x='Year', y='Intake Avg(g/d)', title='Average Food Intake Worldwide')+
theme_pander()
ggplotly(plot1)
# Average Food Intake Worldwide by Year
top_year <- food_life %>%
filter(age==999,female==999,urban==999,edu==999) %>%
group_by(year,Food)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
plot1 <- top_year%>%
ggplot(., aes(x = year, y=intake_avg,group=Food,color=Food),alpha=0.7) +
geom_line( size=1)+
geom_point(size=1)+
# scale_color_manual(values=c(brewer.pal(12,"Set1"),"#999999"))+
scale_color_manual(values=c("#999999","#E18A00","#BE9C00","#8CAB00","#24B700", "#00BE70","#00C1AB","#00BBDA","#00ACFC","#8B93FF","#D575FE","#F962DD","#FF65AC"))+
labs(x='Year', y='Intake Avg(g/d)', title='Average Food Intake Worldwide')+
theme_pander()
ggplotly(plot1)
# Average Food Intake Worldwide by Year
top_year <- food_life %>%
filter(age==999,female==999,urban==999,edu==999) %>%
group_by(year,Food)%>%
summarise(intake_avg = round(mean(intake),2))%>%
arrange(desc(intake_avg))
plot1 <- top_year%>%
ggplot(., aes(x = year, y=intake_avg,group=Food,color=Food),alpha=0.7) +
geom_line( size=1)+
geom_point(size=1)+
# scale_color_manual(values=c(brewer.pal(12,"Set1"),"#999999"))+
scale_color_manual(values=c("#F8766D","#E18A00","#BE9C00","#8CAB00","#24B700", "#00BE70","#00C1AB","#00BBDA","#00ACFC","#8B93FF","#D575FE","#F962DD","#999999"))+
labs(x='Year', y='Intake Avg(g/d)', title='Average Food Intake Worldwide')+
theme_pander()
ggplotly(plot1)
#Dietary Structure of 10 countries in 1990
# select food intake data in 10 countries
countries_10 <- filter(food_life, iso3 %in% country_list)
#select the general data points (all demographics features = 999)
gen_countries <- countries_10 %>%
filter(age == 999 & female == 999, urban == 999, edu == 999)
level_order<- c('West Bank and Gaza','Syrian Arab Republic', 'Sudan','Pakistan','India','Germany','Japan','China','United States')
#Dietary Structure 1990
d_stru_90 <- gen_countries %>% filter(year==1990) %>%
group_by(Country) %>%
summarise(Food, total = sum(intake), percentage=(round(intake/total,4))*100) %>%
ggplot(aes(fill=Food, y=percentage, x=factor(Country, level=level_order)),alpha=0.95) +
geom_bar(position="stack", stat="identity") +
labs(x="Country (order by GDP)", title="Dietary Sturcture in 1990") +
theme(legend.justification = 0.05,
legend.position = "bottom",
legend.text = element_text(size = 8),
panel.grid.minor.y =element_blank()) +
theme_classic() +
coord_flip()
d_stru_90
ggplotly(d_stru_90)
#%>% layout(xaxis = list(title = "Percentage in Diet"),legend = list(orientation = "h",itemsizing="constant"))
#Dietary Structure of 10 countries in 2018
d_stru_18 <- gen_countries %>% filter(year==2018) %>%
group_by(Country) %>%
summarise(Food, total = sum(intake), percentage=(round(intake/total,4))*100) %>%
ggplot(aes(fill=Food, y=percentage, x=factor(Country, level=level_order)),alpha=0.95) +
geom_bar(position="stack", stat="identity") +
labs(x="Country(order by GDP)", title="Dietary Sturcture in 2018") +
theme(legend.justification = 0.05,
legend.position = "bottom",
legend.text = element_text(size = 8),
panel.grid.minor.y =element_blank()) +
theme_classic() +
coord_flip()
ggplotly(d_stru_18)
#%>% layout(xaxis = list(title = "Percentage in Diet"),legend = list(orientation = "h",itemsizing="constant"))
#Changes of Dietary Structure (1990 vs 2018) in rural China
area <- countries_10 %>% filter(age == 999 & urban != 999 &
edu == 999 & Country == "China" &
female == 999 & year != 2020) %>%
mutate(area= case_when(urban==1 ~ "Urban",
urban==0 ~ "Rural"))
area_China <- area %>%
group_by(year) %>%
summarise(Food, area, total = sum(intake), percentage=(round(intake/total,4))*100, .groups = 'drop')
ru.mid<-ggplot(area_China,aes(x=1,y=Food))+geom_text(aes(label=Food))+
geom_segment(aes(x=0.94,xend=0.96,yend=Food))+
geom_segment(aes(x=1.04,xend=1.065,yend=Food))+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(1,-1,1,-1), "mm"))
ru_90 <- area_China %>%
filter(area=="Rural" & year==1990) %>%
ggplot(aes(x = Food, y = percentage,fill = Food)) +
geom_bar(stat = "identity") + ggtitle("% in Diet(Rural China,1990)") +
geom_text(aes(y=10, label = percentage),color = "black") +
coord_flip() + scale_y_reverse() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="none",
panel.background=element_blank(),
plot.title = element_text(size = 12),
plot.margin = unit(c(1,-1,1,0), "mm"))
ru_18 <- area_China %>%
filter(area=="Rural" & year==2018) %>%
ggplot(aes(x = Food, y = percentage, fill = Food)) +
geom_bar(stat = "identity") + ggtitle("% in Diet(Rural China,2018)") +
geom_text(aes(y=10, label = percentage),color = "black") +
coord_flip() + xlab(NULL) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="none",
panel.background=element_blank(),
plot.title = element_text(size = 12),
plot.margin = unit(c(1,-1,1,0), "mm"))
ru1 <- ggplot_gtable(ggplot_build(ru_90))
ru2 <- ggplot_gtable(ggplot_build(ru_18))
ru.mid <- ggplot_gtable(ggplot_build(ru.mid))
grid.arrange(ru1,ru.mid,ru2,ncol=3,widths=c(3/9,3/9,3/9))
basic_life <- food_life %>%
filter(age==999,female==999,urban==999,edu==999,year==2018) %>%
rename(continent = superregion2) %>%
mutate_at(c('cancer_rate','life_exp'), function(x) round(x,2))%>%
select(continent,year,Country,life_exp,cancer_rate) %>%
distinct()%>%
arrange(Country)
datatable(basic_life,filter = list(position = "top"),rownames = FALSE)
